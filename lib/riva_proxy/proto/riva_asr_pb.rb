# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riva_asr.proto

require 'google/protobuf'


descriptor_data = "\n\x0eriva_asr.proto\x12\x0fnvidia.riva.asr\"\x9a\x02\n\x1aStreamingRecognitionConfig\x12\x32\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\".nvidia.riva.asr.RecognitionConfig\x12\x17\n\x0finterim_results\x18\x02 \x01(\x08\x12\x18\n\x10max_alternatives\x18\x03 \x01(\x05\x12 \n\x18\x65nable_word_time_offsets\x18\x04 \x01(\x08\x12$\n\x1c\x65nable_automatic_punctuation\x18\x05 \x01(\x08\x12/\n\'enable_separate_recognition_per_channel\x18\x06 \x01(\x08\x12\x1c\n\x14\x63ustom_configuration\x18\x64 \x01(\t\"\xfb\x05\n\x11RecognitionConfig\x12=\n\x08\x65ncoding\x18\x01 \x01(\x0e\x32+.nvidia.riva.asr.RecognitionConfig.Encoding\x12\x19\n\x11sample_rate_hertz\x18\x02 \x01(\x05\x12\x15\n\rlanguage_code\x18\x03 \x01(\t\x12\x18\n\x10max_alternatives\x18\x04 \x01(\x05\x12\x41\n\x14\x61udio_channel_config\x18\x05 \x01(\x0b\x32#.nvidia.riva.asr.AudioChannelConfig\x12$\n\x1c\x65nable_automatic_punctuation\x18\x0b \x01(\x08\x12/\n\'enable_separate_recognition_per_channel\x18\x0c \x01(\x08\x12\r\n\x05model\x18\x0e \x01(\t\x12\x36\n\x0espeech_context\x18\x0f \x01(\x0b\x32\x1e.nvidia.riva.asr.SpeechContext\x12\x1b\n\x13\x61udio_channel_count\x18\x11 \x01(\x05\x12 \n\x18\x65nable_word_time_offsets\x18\x12 \x01(\x08\x12\x45\n\x12\x64iarization_config\x18\x13 \x01(\x0b\x32).nvidia.riva.asr.SpeakerDiarizationConfig\x12\x42\n\x08metadata\x18\x14 \x03(\x0b\x32\x30.nvidia.riva.asr.RecognitionConfig.MetadataEntry\x12\x1c\n\x14\x63ustom_configuration\x18\x64 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"a\n\x08\x45ncoding\x12\x18\n\x14\x45NCODING_UNSPECIFIED\x10\x00\x12\x0e\n\nLINEAR_PCM\x10\x01\x12\x08\n\x04\x46LAC\x10\x02\x12\t\n\x05MULAW\x10\x03\x12\x08\n\x04\x41LAW\x10\x04\x12\x0c\n\x08LINEAR16\x10\x05\"1\n\x12\x41udioChannelConfig\x12\x1b\n\x13\x61udio_channel_count\x18\x01 \x01(\x05\"/\n\rSpeechContext\x12\x0f\n\x07phrases\x18\x01 \x03(\t\x12\r\n\x05\x62oost\x18\x02 \x01(\x02\"t\n\x18SpeakerDiarizationConfig\x12\"\n\x1a\x65nable_speaker_diarization\x18\x01 \x01(\x08\x12\x19\n\x11min_speaker_count\x18\x02 \x01(\x05\x12\x19\n\x11max_speaker_count\x18\x03 \x01(\x05\"\x92\x01\n\x19StreamingRecognizeRequest\x12G\n\x10streaming_config\x18\x01 \x01(\x0b\x32+.nvidia.riva.asr.StreamingRecognitionConfigH\x00\x12\x17\n\raudio_content\x18\x02 \x01(\x0cH\x00\x42\x13\n\x11streaming_request\"i\n\x1aStreamingRecognizeResponse\x12<\n\x07results\x18\x01 \x03(\x0b\x32+.nvidia.riva.asr.StreamingRecognitionResult\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"\xb4\x01\n\x1aStreamingRecognitionResult\x12\x43\n\x0c\x61lternatives\x18\x01 \x03(\x0b\x32-.nvidia.riva.asr.SpeechRecognitionAlternative\x12\x10\n\x08is_final\x18\x02 \x01(\x08\x12\x11\n\tstability\x18\x03 \x01(\x02\x12\x13\n\x0b\x63hannel_tag\x18\x04 \x01(\x05\x12\x17\n\x0f\x61udio_processed\x18\x05 \x01(\t\"p\n\x1cSpeechRecognitionAlternative\x12\x12\n\ntranscript\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\x12(\n\x05words\x18\x03 \x03(\x0b\x32\x19.nvidia.riva.asr.WordInfo\"g\n\x08WordInfo\x12\x0c\n\x04word\x18\x01 \x01(\t\x12\x12\n\nstart_time\x18\x02 \x01(\x02\x12\x10\n\x08\x65nd_time\x18\x03 \x01(\x02\x12\x12\n\nconfidence\x18\x04 \x01(\x02\x12\x13\n\x0bspeaker_tag\x18\x05 \x01(\x05\"U\n\x10RecognizeRequest\x12\x32\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\".nvidia.riva.asr.RecognitionConfig\x12\r\n\x05\x61udio\x18\x02 \x01(\x0c\"N\n\x11RecognizeResponse\x12\x39\n\x07results\x18\x01 \x03(\x0b\x32(.nvidia.riva.asr.SpeechRecognitionResult\"\x8c\x01\n\x17SpeechRecognitionResult\x12\x43\n\x0c\x61lternatives\x18\x01 \x03(\x0b\x32-.nvidia.riva.asr.SpeechRecognitionAlternative\x12\x13\n\x0b\x63hannel_tag\x18\x02 \x01(\x05\x12\x17\n\x0f\x61udio_processed\x18\x03 \x01(\t2\xde\x01\n\x15RivaSpeechRecognition\x12q\n\x12StreamingRecognize\x12*.nvidia.riva.asr.StreamingRecognizeRequest\x1a+.nvidia.riva.asr.StreamingRecognizeResponse(\x01\x30\x01\x12R\n\tRecognize\x12!.nvidia.riva.asr.RecognizeRequest\x1a\".nvidia.riva.asr.RecognizeResponseB\x12\xaa\x02\x0fNvidia.Riva.Asrb\x06proto3"

pool = ::Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Nvidia
  module Riva
    module Asr
      StreamingRecognitionConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.StreamingRecognitionConfig").msgclass
      RecognitionConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.RecognitionConfig").msgclass
      RecognitionConfig::Encoding = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.RecognitionConfig.Encoding").enummodule
      AudioChannelConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.AudioChannelConfig").msgclass
      SpeechContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.SpeechContext").msgclass
      SpeakerDiarizationConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.SpeakerDiarizationConfig").msgclass
      StreamingRecognizeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.StreamingRecognizeRequest").msgclass
      StreamingRecognizeResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.StreamingRecognizeResponse").msgclass
      StreamingRecognitionResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.StreamingRecognitionResult").msgclass
      SpeechRecognitionAlternative = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.SpeechRecognitionAlternative").msgclass
      WordInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.WordInfo").msgclass
      RecognizeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.RecognizeRequest").msgclass
      RecognizeResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.RecognizeResponse").msgclass
      SpeechRecognitionResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nvidia.riva.asr.SpeechRecognitionResult").msgclass
    end
  end
end
